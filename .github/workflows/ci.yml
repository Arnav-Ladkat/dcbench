name: CI

on:
    push:
        branches: [ '*' ]
    pull_request:
        branches: [ '*' ]
    
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    
    Linting:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ['3.7', '3.8', '3.9']
        
        steps:
            -   uses: actions/checkout@v2
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v2
                with:
                    python-version: ${{ matrix.python-version }}
                    
            -   uses: actions/cache@v2
                with:
                    path: ~/.cache/pip
                    key: ${{ runner.os }}-pip

            -   name: Install Dependencies
                run: |
                    python -m pip install --upgrade pip
                    make dev
            -   name: Lint with isort, black, docformatter, flake8
                run: |
                    make lint
    
    Documentation:
        needs: Linting
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ['3.8', '3.9']
                
        steps:
            -   uses: actions/checkout@v2
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v2
                with:
                    python-version: ${{ matrix.python-version }}
                    
            -   uses: actions/cache@v2
                with:
                    path: ~/.cache/pip
                    key: ${{ runner.os }}-pip
    
            -   name: Install Dependencies
                run: |
                    python -m pip install --upgrade pip
                    make dev
    
            -   name: Generate Docs
                run: |
                    make docs
    Build:
        permissions:
            contents: 'read'
            id-token: 'write'
        if:
            contains('
            refs/heads/main
            ', github.event.pull_request.base.ref)
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest] #, macos-latest]
                python-version: ['3.7', '3.8', '3.9']
                
        steps:
            -   uses: actions/checkout@v2

            
    
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v2
                with:
                    python-version: ${{ matrix.python-version }}
            

            -   id: auth
                uses: google-github-actions/auth@v0
                with:
                    workload_identity_provider: 'projects/419310667461/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
                    service_account: 'github-actions@hai-gcp-fine-grained.iam.gserviceaccount.com'

            -   name: Set up gcloud Cloud SDK environment
                uses: google-github-actions/setup-gcloud@v0.2.0

            -   name: Use gcloud CLI
                run: gcloud info

            -   uses: actions/cache@v2
                with:
                    path: ~/.cache/pip
                    key: ${{ runner.os }}-pip
    
            -   name: Install Dependencies
                run: |
                    pip install -e ".[dev]"
                    
            -   name: Test with pytest
                run: |
                    make test-cov
            
            -   name: Upload to codecov.io
                uses: codecov/codecov-action@v1
                with:
                    file: ./coverage.xml
                    flags: unittests
                    name: codecov-umbrella
                    fail_ci_if_error: true
                    
